맥 기준 : 홈브류 설치 -> 깃설치
깃 기능  : 버전관리, 백업, 협맥
작업트리 : 눈에 보이는 작업영역
스테이지 : 버전으로 만들 파일이 대기하는 곳, 작업트리에서 수정한 작업파일중 선택해 스테이지로 넘긴다
저장소 : 스테이지에서 대기중인 파일들을 버전으로 만들어 저장하는곳
과정 : 수정전 -> 수정후 -> 스테이징 -> 커밋


pwd : 현재 위치의 경로
ls : 디렉터리와 파일 리스트
ls -l : 리스트 상세보기
ls -a : 숨긴 파일도 표시
ls -r : 파일의 정렬순서 거꾸로
ls -t : 시간 내림차순으로
clear : 터미널 창 지우
cd .. : 상위 디렉터리로 이동
cd Users : 특정 디렉터리로 이동
cd ~ : 홈 디렉터리로 이동
mkdir dir1 : 디렉터리 생성
rm -1 dir1 : 디렉터리 삭제
. : 현재 디렉터리
.. : 상위 디렉터리
~ : 현재 접속중인 사용자 디렉터리
exit : 터미널창 종료

git init : 현재 디렉터리에서 깃을 사용가능하도록 초기화
git status : 깃의 상태 확인
... On branch main : 저장소에 들어있는것들
... No commits yet : 커밋한 파일이 없다
... nothing to commit : 커밋할 파일이 없다
... Changes not staged for commit : 수정된 파일이 스테이지에 올라가지 않음

git add [파일명] : 해당 파일을 스테이징 한다
git commit -m "save" : 스테이징 된 파일을 커밋한다
git commit -am "save" : 이전에 커밋한 모든 파일들을 스테이징과 커밋한다
git log : 커밋한 정보 확인
git log --stat : 커밋 관련 파일까지 보기
git diff : 작업트리와 스테이지의 파일을 비교하거나 파일저장소의 최신 파일을 비교해 파일 커밋 전 최종검토 가능

git restore [파일명] : 스테이징 되지않은 수정된 파일을 수정 전으로 되돌린다
git restore [파일명] --staged : 스테이징 된 파일을 수정 전으로 되돌린다
git reset HEAD^ : 커밋 전으로 되돌려 수정완료되었으나 스테이징 되기 전의 상태로 되돌린다(작업트리 내용까지 원복시 리스토어 필요)












