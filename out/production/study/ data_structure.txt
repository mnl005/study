자료구조 : 데이터의 효율적 관리와 수정.삭제.탐색.저장 가능한 데이터 집합

시간복잡도 : 입력 크기에 대해 어떠한 알고리즘이 실행되는데 걸리는 시간
... 존재 이유는 효율적 코드로 개선시 쓰이는 척도
공간복잡도 : 프로그램을 실행시켰을때 필요로 하는 자원 공간의 양, 정적 변수와 동적으로 재귀적 함수로 인해 공간 필요하느 경우도 이에 해당

 선형자료구조 : 요소가 일렬로 나열되어 있는 자료구조
 연결리스트 : 데이터를 감싼 노드를 포인터로 연결해서 공간적 효율성을 극대화한 자료구조
 ... 싱글연결리스트 : next 포인터만 가진다
 ... 이준연결 리스트 : next.prev포인트를 가진다
 ... 원형이중 연결리스트 : 이중 연결 리스트와 유사, 마지막 노드의 next 포인터가 헤드 노드를 가르킨다

 정적 배열 : 같은 타입의 변수로 이루어짐, 크기불변, 인접 메모리 위치에 있는 데이터를 모아놓은 집합, 중복을 허용하고 순서가 있다
 직접접근 : 랜덤접근이라고도 한다, 동일한 시간에 배열과 같은 순차적 데이터가 있을시 임의의 인덱스에 해당하는 데이터에 접근할 수 있는 기능
... 데이터를 저장된 순서대로 검색하는 순차적 접근과 대비
... 배열은 랜덤 접근이 가능하나 연결 리스트는 랜덤 접근이 불가
... 참조가 많은경우 배열이 빠르다
... 데이터 추가와 삭제는 연결리스트가 빠르다
... 따라서 행위의 종류와 빈도수에 따라 사용되는 자료구조가 달라야 한다

백터 : 동적요소할당 가능한 동적배열, 중복허용, 순서존재, 랜덤접근가능
스택 : LIFO, 웹브라우저 방문기록등에 사용
큐 : FIFO, cpu작업 기다리는 프로세스, 스레드 행렬, 네트워크 접속 기다리는 행렬, 너비우선탐색, 캐시 등에 사용

비선형 자료구조 : 일렬로 나열않고 자료 순서나 관계가 복잡한 구조, 트리나 그래프가 이에 해당
그래프 : 정점과 간선으로 이루어진 자료구조
... 정점 : 도착지점
... 간선 : 도착지점까지의 경로
... 양방향 간선 : 정점사이 쌍방통행
... 가중치 : 간선과 정점 사이에 드는 비용
트리 : 그래프와 유사하게 정점과 간선으로 구성, 트리구조로 배열된 일종의 계층적 데이터의 집합
... 구성 : 루트노드 - 내부노드 - 리프노드
... 루트노드 : 최상위노드
... 내부노드 : 같은층에 있는 노드
... 리프노드 : 자식없는 노드 ㅠ
... 깊이 : 루트 노드부터 특정 노드까지의 최단거리
... 높이 : 루트부터 리프까지 거리중 가장 긴 거리
... 레벨 : 최상위 노드가 0랩부터 시작
... 서브트리 : 트리내의 하위집합
... 이진트리 : 자식노드가 둘 이하
이진탐색트리 : 부모보다 작으면 왼쪽, 크면 오른쪽으로 이동해 성장한 트리
AVL트리 : 이진탐색트리는 비선형적일때 유리하지만 선형적일때 불리함으로 이를 방지하기위해 스스로 균형잡는 트리, 두 자식의 서브트리의 높이의 최대한 항상 1만큼
... 차이난다
레드블랙트리 : 균형이진탐색트리로 탐색.삽입.삭제 모두시간복잡도가 동일, 모든리프노드와루트노드는 블랙이고 어떤 노드레 레드면 그 노드의 자식은 블랙이다
힙 : 완전이진트리 기반 자료구조 최소힙과 최대힙 존재, 해당 힙에 따라 특정한 특징을 지킨 트리
... 최대힙 : 루트 노드에 있는 키는 모든 자식에 있는 키중 가장 크다, 각 노드의 자식 노드와의 관계도 이와 같은 특징이 재귀적으로 이루어진다
... 최소힙 : 루트 노드에 있는 키든 모든 자식의 키중 최소값, 각 노드의 자식 노드와의 관계도 이 특징이 재귀적으로 이루어져야 한다

우선순위 큐 : 우선순위 대기열이라고도 한다, 대기열중 우선순위가 높을수록 먼저 제공되는 자료구조
맵 : 특정 순서 따라 매핑된 값의 조합으로 형성된 자료구조
셋 : 특정 순서따라 고유 요소 저장하는 컨테이너, 중복물가
해시테이블 : 무한에 가까운 데이터를 유한한 개수의 해시 값으로 매핑, 작은 메모리로도 프로세스 관리가능




























