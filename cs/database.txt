데이터베이스 : 일정규칙이나 규약통해 구조화되어 저장되는 데이터의 모음, 이를 관리하는 DBMS, DBMS마다 정의된 쿼리 언어통해 삽입.삭제.수정.조회 가능
... 실시간 접근과 동시 공유 가능
... 구조 : 응용프로그램 - DBMS - DB

엔티티 : 사람.장소.물건.사건.개념 등의 여러 속성을 지닌 명사, ex) 회원이란 엔티티는 이름.아이디 등의 속성을 가진다
약한 엔티티 : 혼자 존재 못하고 다른 엔티티 존재여부에 따라 종속적일때
강한 엔티티 : 약한엔티티를 종속
릴레이션 : 데이터페이스에서 정보를 저장하는 기본단위, 엔티티의 데이터를 데이터베이스는 리레이션에 담아 관리,
... 관계형 데이터베이스에선 테이블, 비관계형 데이터베이스에선 컬렉션이라 불린다
테이블 : 레코드의 집합
데이터베이스 : 테이블의 집합
속성 : 릴레이션에서 관리되는 구체적이고 고유한 이름을 갖는 정보
도메인 : 릴레이션에 포함된 각 속성들이 가질 수 있는 값의 집합, 성별이란 속성의 도메인은 남.녀
레코드-행-튜플
필드-열-속성

숫자타입 : TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT
날짜타입 : DATE, DATETIME, TIMESTAMP
문자타입 : CHAR,VARCHAR,TEXT,BLOB,ENUM,SET

1대1관계 : 유저테이블과 이메일 테이블의 관계에서 유저한명당 하나의 이메일 가지는 경우
1대다 관계 : 한 유저가 여러 상품을 담는경우
다대다 관계 : 학생과 강의의 관계, 서로 여럿을 선택 가능할때

기본키(PK) : 유일성과 최소성 만족
자연키 : 주민번호와 같은 경우
인조키 : 유저 아이디 등을 부여해 고유한 식별자로 사용되는 경우
외래키(FK) : 다른 테이블의 기본키를 그대로 참조하는 값, 개체와의 관계식별시 사용
후보키 : 기본키가 될수있는 후보, 유일성과 최소성 만족
대체키 : 2개이상의 후보키중 하나를 기본키로 정하고 남는키
슈퍼키 : 각 레코드를 유일하게 식별 가능한 유일성 가지나 최소성 불만족하는 키

ERD : 데이터베이스 구축시 기초적인 뼈대역할, 릴레이션간의 관계를 정의, 시스템 요구사항 기반으로 작성, 데이터베이스 구축 이후에도 디버깅 또는 비즈니스
... 프로세스 재설계가 필요한 경우 설계도 역할 담당, 비정형 데이터를 충분히 표현 불가
비정형 데이터 : 비구조화된 데이터, 미리 정의된 데이터 모델이 없거나 정의된 방식으로 정리되지 않는 정보

정규화 과정 : 릴레이션간 잘못된 종속 관계로 데이터베이스 이상현상이 일어나 이를 해결하거나 저장 공간을 효율적으로 사용하기 위해 릴레이션을 여러개로분리하는과정
정규화 원칙 : 같은 의미를 표현하는 릴레이션이지만 좀 더 좋은 구조로 만들어야 하고 중복성 감소와 독립적인 관계는 별개의 릴레이션으로 표현해야 하며
... 각각의 릴레이션은 독립적인 표현이 가능해야 한다

제1정규형 : 모든 도메인이 더이상 분해 불가한 원자값으로만 구성되어야 한다, 릴레이션의 속성값중 한 개의 기본키에 대해 두개 이상의 값을 가지는 반복집합 제거
제2정규형 : 제1정규형에서 부분 함수 종속성을 제거한 형태, 모든 속성이 기본키에 완전 함수 종속적인 것을 의미 즉 한 테이블에 기본키가 2개일경우 따로 떼어낸다
제3정규형 : 제2정규형이고 기본키가 아닌 모든 속성이 이행적 함수 종속을 만족하지 않는 상태
이행적 함수 종속 : a->b->c 일때 a->c가 만족되는 경우
... 이를 (a,b) 와 (b,c) 테이블로 분리한다
보이스/코드 정규형(BCNF) : 제3정규형이고 결정자가 후보키가아닌 함수종속관계를 제거하여 릴레이션의 함수 종속 관계에서 모든 결정자가 후보키인 상태를 의미
... 결정자 : 함수 종속 관계에서 특정 종속자를 결정짓는 요소, x->y일때 x는 결정자 y는 종속자
... ex) 학생과 강사 정보가 담긴 테이블에서 강사는 학번이 없음으로 이를 학생테이블과 강사테이블로 분리하는 경우

트랜잭션 : 데이터베이스에서 하나의 논리적 기능 수행을 위한 작업단위, 여러개의 쿼리들을 하나로 묶는 단위, 원자성.일관성.독립성.지속성이 특징
원자성 : 트랜잭션과 관련된 일이 모두 수행되었거나 수행되지 않았거나를 보장하는 특징
커밋 : 여러 쿼리가 성공적으로 처리되었다고 확정하는 명령어, 변경내용의 영구저장
롤백 : 트랜잭션으로 처리한 하나의 묶음과정을 일어나기 전으로 되돌리는것
트랜잭션 전파 : 트랜잭션 관련 메서드의 호출을 하나의 트랜잭션에 묶이도록 하는것
일관성 : 허용된 방식으로만 데이터를 변경해야 하는것

격리성 : 트랙잭션 수행시 서로 끼어들지 못한다

팬텀리드 : 한 트랜잭션 내에서 동일한 쿼리 보낼때 해당 조회 결과가 다른 경우, 다른 행이 선택될 수도 있다
반복가능하지 않은 조회 : 한 트랜잭션 내에서 같은 행에 두번 이상 조회가 발생했으나 그 값이 다른경우, 행 값이 달라질수도 있다
더티리드 : 한 트랜잭션이 실행중일때 다른 트랜잭션에 이해 수정되었으나 아직 커밋되기 전의 데이터를 읽을 수 있을때 발생

SERIALIZABLE : 트랜잭션을 순차적으로 진행시켜 여러 트랜잭션이 동시에 같은행에 접근하는것을 막는 엄격한 수준, 교착상태발생가능성높고, 성능가장떨어진다
REPEATABLE_READ : 하나의 트랜잭션이 수정한 행을 다른 트랜잭션이 수정할 수 없도록 막아주나 새로운 행의 추가를 막지 않는다, mysql과 innodb의 기본값
READ_COMMIT : postgresql,sql server, 오라클의 기본값이고 다른 트랜잭션이 커밋하지 않은 정보는 읽을수 없다,
... 어떤 트랜잭션이 접근한 행을 다른 트랜잭션이 수정 가능,
READ_UNCOMMITED : 커밋전 다른 트랜잭션에 노출 가능, 가장빠르다, 많은양의 데이터 집계시 사용

지속성 : 성공적으로 수행된 트랜잭션은 영원히 반영되어야 한다, 장애발생시 복구가능해야하고 이를위해 체크섬.저널링.롤백 기능을 제공한다
체크섬 : 중복 검사의 한 형태, 오류 정정을 통해 송신된 자료의 무결성을 보호하는 단순한 방법
저널링 : 파일 시스템 또는 데이터베이스 시스템에 변경 사항을 반영하기 전에 로깅하는 것, 트랜잭션 등 변경 사항에 대한 로그를 남기는 것

무결성 : 데이터의 정확성.일관성.유효성을 유지하는것, 데이터베이스의 값과 현실세계의 실제 값이 일치해야 한다
개체 무결성 : 기본키로 선택된 필드는 빈값을 허용하지 않는다
참조 무결성 : 서로 참조 관계의 두 테이블의 데이터는 항상 일관된 값을 유지
고유 무결성 : 특정 속성에 대해 고유한 값을 가지도록 조건이 주어진 경우 그 속성 값은 모두 고유한 값을 가진다
NULL 무결성 : 특정속성 값으로 null 이 올수 없다는 조건이 주어진 경우

관계형 데이터베이스 : 행과열을 가지는 표 형식 데이터를 저장하는 형태의 데이터베이스

인덱스 : 데이터의 빠른 검색을 위함, b-트리 자료 구조로 이루어짐, 대수확장성을 가져서 트리 깊이가 리프 노드수에 비에 매우 느리게 성장한다
인덱스 최적화 : 인덱스는 두번탐색함으로 읽기비용이 증가되고 컬렉션 수정시 인덱스도 수정되어야 한다 따라서 인덱스 적용전 테스팅 통해 탐색시간을 확인해야 한다

내부조인 : 왼쪽.오른쪽 테이블 모두 일치하는 결과만
왼쪽조인 : 내부조인결과 포함하는 왼쪽테이블의 모든결과
오른쪽조인 : 내부조인결과 포함하는 오른쪽테이블의 모든결과
합집합 조인 : 두 테이블 기반으로 모든행 표기
중첩루프조인 : 두 테이블중 한 테이블씩 모든행을 순차적으로 읽어 결과값 반환
정렬 병합 조인 : 각 테이블을 조인할 필드를 기준으로 정렬후 조인작업 수행
해시조인 : 해시테이블기반조인, 중첩루프조인보다 효율적, 사용가능한 메모리양은 런타임시 조절가능
... 빌드 단계 : 입력 테이블중 적은 용량의 테이블 하나를 메모리 내 해시 테이블로 빌드
... 프로브 단계 : 레코드 읽어 조건에 맞는 결과값 반환



















