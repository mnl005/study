API : 프로그램 간 상호작용 위한 매개체
REST API : URL의 설계방식, 서버/클라이언트구조.무상태.캐시처리기능.계층화.인터페이스 일관성,
... URL만 보고 어떤 작동을 하는지 알 수 있다, 상태가 없어 서버와 클라이언트의 역할이 명확히 분리,
... HTTP표준 사용하는 모든 플랫폼에서 사용가능, HTTP메서드의 종류개수에 제한이 있다, 표준규약은 없다
... 규칙 : url은 동사를 쓰지 아니하고 자원을 표시해야 한다, POST,GET,PUT,DELETE로 url의 동사를 표현한다
... ex) : GET/users/id=3

200 OK : 요청이 성공적으로 수행됨
201 Created : 요청이 성공적으로 수행되었고 새로운 리소스가 생성됨
400 Bad Request : 요청값이 잘못되어 요청에 실패
403 Forbidden : 권한이 없어 요청에 실패
404 Not Found : 요청 값으로 찾은 리소스가 없어 요청에 실패
500 Internal Server Error : 서버상의 문제로 요청에 실패

Object를 직렬화 -> JSON
JSON을 역직렬화 -> Object
... 직렬화는 자바 시스템 내부에서 사용되는 객체를 외부에서 사용하도록 데이터를 변환하는것

 타임리프 : HTML상에 데이터를 넣어 보주는 도구

인증 : 사용자의 신원을 입증하는 과정
인가 : 사이트의 특정 부분에 접근 가능한지 권한을 확인
스프링시큐리티 : 필터 기반으로 동작, 요청과 응답이 필터와 인터셉터를 거치는 과정에서 보안이 이루어진다, 쿠키.세션 방식으로 인증을 처리,
... 사용자의 인증.인가 정보를 UserDetails객체에 담음으로 이 클래스를 상속 후 오버라이드 후 활용 가능,
... 사용자의 정보를 UserDetailService로 가져와 사용
과정 요약 : 폼에 아이디 비밀번호 입력시 필터거쳐 AuthenticationProvider이 DB의 사용자 정보 가져와 인증, 인증 성공 유무에 따라 다른 핸들러 실행

토큰기반 인증 : 서버에서 클라이언트를 구분하는 유일값으로 토큰을 사용해 클라이언트가 요청시 토큰을 함께보내 토큰을 검증하여 유효한 사용자인지 검증
토큰기반 인증특징 : 클라이언트에 인증정보 저장함으로 서버에선 인증정보 저장등을 안 해도 됨으로 무상태성을 가진다,
... 서버확장시 상태관리에 신격을 적게사용함으로 확장성을 가진다, 토큰발급후 토큰정보를 변경할 수 없음으로 무결성을 가진다
JWT 구조 : 헤더 - 내용 - 서명
... 헤더 : 토큰타입과 해싱알고리즘 지정관련 정보
... 내용 : 토큰관련정보,내용의 한덩이를 클레임이라 한다, 클레임은 키값의 한쌍, 공개클레임과 비공개클레임으로 구성
... 서명 : 토큰조작여부 확인, 헤더의 인코딩값과 내용의 인코딩값을 합쳐 주어진 비밀키 사용해 해시값 생성
... 유효기간 : 유효기간 설정가능하다, 엑세스 토큰의 유효기간 짧게 설정하고 리프레시 토큰의 유효기간을 길게 설정해 악의적 공격에 대응
..... 토큰발급시 알고리즘과 미리 지정한 비밀키로 암호화된 토큰을 사용자에게 전달, 인증시 비밀키로 복호화 후 토큰이 유효한지 검증

OAuth : 제 3제의 서비스에 계정 관리를 위탁하는 방식
... 권한부여코드승인타입 과정 : 리소스오너가 애플리케이션에 권한요청 -> 인증서버에 요청이 처음인경우 사용자 데이터 접근동의를 얻는다 ->
... 이후 로그인이 진행되면 구너한부여 서버는 데이터에 접근 가능하게 인증 및 권한 부여를 수신
... -> 로그인 성공시 인증코드 제공 -> 인증코드를 엑세스토큰으로 교환
... -> 엑세스 토큰으로 리소스 오너의 정보를 가져온다, 이후엔 토큰이 유효한지 검사후 응답

쿠키 : 웹사이트의의 서버에서 로컬환경에 저장하는 데이터





















